
/*
 * This file is part of Jkop
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ZipWriter imports cape
	depends "dll:System.IO.Compression.dll"
	depends "dll:System.IO.Compression.FileSystem.dll"
	depends "netcore:package System.IO.Compression 4.1.0-rc2-24027":

prop file as File;

var archive as magical<System.IO.Compression.ZipArchive>;

func initialize as this
{
	if(file == null) {
		return(null);
	}
	var fp = file.getPath();
	if(fp == null) {
		return(null);
	}
	lang "cs" {{{
		archive = System.IO.Compression.ZipFile.Open(fp, System.IO.Compression.ZipArchiveMode.Create);
	}}}
	if(archive == null) {
		return(null);
	}
	return(this);
}

func addFile(file as File, filename as string) override as bool
{
	if(archive == null || file == null) {
		return(false);
	}
	lang "cs" {{{
		if(System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(archive, file.getPath(), filename) == null) {
			return(false);
		}
	}}}
	return(true);
}

func close override as bool
{
	if(archive == null) {
		return(false);
	}
	lang "cs" {{{
		archive.Dispose();
	}}}
	archive = null;
	return(true);
}
