
/*
 * This file is part of Jkop
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class imports cape:

func main(args as array<string>) as int #main
{
	if(SIZE(args) < 1) {
		PRINT("Not enough arguments: " .. String.forInteger(SIZE(args)));
		return(1);
	}
	var ff = FileInstance.forPath(args[0]);
	var cc = ff.getContentsString("UTF-8");
	if(cc == null) {
		PRINT("Failed to read file: " .. args[0]);
		return(1);
	}
	var tt = capex.TextTemplate.forHTMLString(cc, Vector.forArray([ ff.getParent() ]) as! vector<File>);
	if(tt == null) {
		PRINT("Failed to process HTML template: " .. args[0]);
		return(1);
	}
	var rr = tt.execute(null, null);
	if(rr == null) {
		PRINT("Failed to execute HTML template: " .. args[0]);
		return(1);
	}
	PRINT(rr);
	return(0);
}